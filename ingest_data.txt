import pandas as pd
import datetime
from google.cloud import storage
import os
API_KEY = os.environ.get('API_KEY')
def export_data(event, context):

  HIST_URL = 'https://api.covidactnow.org/v2/states.timeseries.csv?apiKey='+API_KEY
  CURRENT_URL = 'https://api.covidactnow.org/v2/states.csv?apiKey='+API_KEY
  #read historical and current daat
  df_hist = pd.read_csv(HIST_URL)
  df_current = pd.read_csv(CURRENT_URL)
  csv_str_hist = df_hist.to_csv()
  csv_str_current = df_current.to_csv()
  
  #function to merge hist_data with current data
  def merge_data(hist_states,states):
    #remove columns 'unused' from states and hist_states
    cols = [c for c in states.columns if c.lower()[:6] != 'unused']
    states=states[cols]
    remove_unused_cols = [c for c in hist_states.columns if c.lower()[:6] != 'unused']
    hist_states = hist_states[remove_unused_cols]
    states_drop_cols = ['level','metrics.testPositivityRatioDetails.source','population','riskLevels.contactTracerCapacityRatio',
                        'riskLevels.icuCapacityRatio','riskLevels.infectionRate','riskLevels.testPositivityRatio','url']
    
    #drop not matching columns from current data
    merge_states = states.drop(states_drop_cols, axis=1)
    #drop not matching cols from hist data
    merge_hist_states = hist_states.drop('metrics.testPositivityRatioDetails', axis=1)
    #erename date col in current data for matching with hist data
    merge_states.rename({'lastUpdatedDate':'date'},axis=1,inplace=True)
    #merge two matching data frames
    combined_df = merge_hist_states.append(merge_states)
    return combined_df

  # function to upload data to cloud storage 
  def upload_blob(bucket_name, data, destination_blob_name):

    storage_client = storage.Client()
    bucket = storage_client.get_bucket(bucket_name)
    blob = bucket.blob(destination_blob_name)
    blob.upload_from_string(data, content_type='text/csv')
  
  merged_df = merge_data(df_hist,df_current)
  csv_str_merged = merged_df.to_csv()

  upload_blob('de-project-test', csv_str_hist, 'hist-data' + '.csv')
  upload_blob('de-project-test', csv_str_current, 'current-data' + '.csv')
  upload_blob('de-project-test', csv_str_current, 'meged-data' + '.csv')

return 'Data Uploaded to GCS Bucket'
